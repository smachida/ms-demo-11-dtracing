server:
  port: 7003

spring:
  # 本番環境では "none" を設定
  jpa:
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:mysql://localhost/review-db?character_set_server=utf8mb4
    username: vmware
    password: password
    sql-script-encoding: utf-8
    hikari:
      initializationFailTimeout: 60000
  cloud:
    stream:
      defaultBinder: rabbit
      default:
        contentType: application/json
      bindings:
        input:
          destination: reviews
          group: reviewsGroup
          consumer:
            maxAttempts: 3
            backOffInitialInterval: 500
            backOffMaxInterval: 1000
            backOffMultiplier: 2.0
      rabbit:
        bindings:
          input:
            consumer:
              autoBindDlq: true
              republishToDlq: true
      kafka:
        bindings:
          input:
            consumer:
              enableDlq: true
        binder:
          replication-factor: 1

logging:
  level:
    root: INFO
    jp.vmware.sol: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:mysql://mysql/review-db?character_set_server=utf8mb4

server:
  port: 8080

---
spring:
  config:
    activate:
      on-profile: streaming_partitioned
  cloud:
    stream:
      bindings:
        input:
          consumer:
            partitioned: true
            instanceCount: 2

---
spring:
  config:
    activate:
      on-profile: streaming_instance_0
  cloud:
    stream:
      bindings:
        input:
          consumer:
            instanceIndex: 0

---
spring:
  config:
    activate:
      on-profile: streaming_instance_1
  cloud:
    stream:
      bindings:
        input:
          consumer:
            instanceIndex: 1

---
spring:
  config:
    activate:
      on-profile: kafka
  cloud:
    stream:
      defaultBinder: kafka

management:
  health:
    rabbit:
      enabled: false
