server:
  port: 7002

spring:
  data:
    mongodb:
      host: localhost
      port: 27017
      username: mongo
      password: mongo
      database: recommendation-db
  cloud:
    stream:
      defaultBinder: rabbit
      default:
        contentType: application/json
      bindings:
        input:
          destination: recommendations
          group: recommendationsGroup
          consumer:
            maxAttempts: 3
            backOffInitialInterval: 500
            backOffMaxInterval: 1000
            backOffMultiplier: 2.0

      rabbit:
        bindings:
          input:
            consumer:
              autoBindDlq: true
              republishToDlq: true
      kafka:
        bindings:
          input:
            consumer:
              enableDlq: true
        binder:
          replication-factor: 1

logging:
  level:
    root: INFO
    jp.vmware.sol: DEBUG
    org.springframework.data.mongodb.core.MongoTemplate: DEBUG

---
spring:
  config:
    activate:
      on-profile: docker
  data:
    mongodb:
      host: mongodb_recommendation

server:
  port: 8080

---
spring:
  config:
    activate:
      on-profile: streaming_partitioned
  cloud:
    stream:
      bindings:
        input:
          consumer:
            partitioned: true
            instanceCount: 2

---
spring:
  config:
    activate:
      on-profile: streaming_instance_0
  cloud:
    stream:
      bindings:
        input:
          consumer:
            instanceIndex: 0

---
spring:
  config:
    activate:
      on-profile: streaming_instance_1
  cloud:
    stream:
      bindings:
        input:
          consumer:
            instanceIndex: 1

---
spring:
  config:
    activate:
      on-profile: kafka
  cloud:
    stream:
      defaultBinder: kafka

management:
  health:
    rabbit:
      enabled: false
